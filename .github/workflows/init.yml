  - #define F_CPU 16000000UL
    #include <avr/io.h>
    #include <util/delay.h>
    
    void Command(unsigned char byte);
    void Data(unsigned char byte);
    void LCD_init();
    void MOVE(int y, int x);
    void STRING(unsigned char font[], unsigned char n);
    
    #define CGRAM 0x40
    #define DDRAM 0x80
    
    #define LINE1 0x00
    #define LINE2 0x40
    
    
    int main(void)
    {
    	unsigned char emptyHeart[] = {0x00,0x0a,0x15,0x11,0x11,0x0a,0x04, 0x00};
    	unsigned char fillHeart[] = {0x00,0x0a,0x1f,0x1f,0x1f,0x0e,0x04, 0x00};
    
    	DDRD = 0xff;
    	PORTD = 0x00;
    	LCD_init();
    	
    	Command(CGRAM | (0 << 3));
    	for(int i=0; i<8; i++){
    		Data(emptyHeart[i]);
    	}
    	
    	Command(CGRAM | (1 << 3));
    	for(int i=0; i<8; i++){
    		Data(fillHeart[i]);
    	}
    	
    	while (1){
    		for(int i=0; i<16; i++){
    			Command(DDRAM | (LINE1 + i));
    			Data(0x00);
    		}
    		for(int i=0; i<16; i++){
    			Command(DDRAM | (LINE2 + i));
    			Data(0x00);
    		}
    		_delay_ms(1000);
    		for(int i=0; i<16; i++){
    			Command(DDRAM | (LINE1 + i));
    			Data(0x01);
    		}
    		for(int i=0; i<16; i++){
    			Command(DDRAM | (LINE2 + i));
    			Data(0x01);
    		}
    		_delay_ms(1000);
    	}
    }
    
    void STRING(unsigned char font[], unsigned char n)
    {
    	unsigned char i;
    	for (i = 0; i < n; i++)
    	{
    		Data(font[i]);
    	}
    }
    
    void Command(unsigned char byte) {
    	_delay_ms(2);
    	PORTD = (byte & 0xf0);
    	PORTD &= 0xfe;
    	PORTD &= 0xfd;
    	_delay_us(1);
    	PORTD |= 0x04;
    	_delay_us(1);
    	PORTD &= 0xfb;
    
    	PORTD = ((byte << 4) & 0xf0);
    	PORTD &= 0xfe;
    	PORTD &= 0xfd;
    	_delay_us(1);
    	PORTD |= 0x04;
    	_delay_us(1);
    	PORTD &= 0xfb;
    }
    
    void MOVE(int y, int x)     //커서 이동
    {
    	unsigned char data;
    	if (y == 1) 	data = 0x80 + x - 1;
    	else data = 0xc0 + x - 1;
    	Command(data);
    }
    
    void Data(unsigned char byte) {
    	_delay_ms(2);
    	PORTD = (byte & 0xf0);
    	PORTD |= 0x01;
    	PORTD &= 0xfd;
    	_delay_us(1);
    	PORTD |= 0x04;
    	_delay_us(1);
    	PORTD &= 0xfb;
    
    	PORTD = ((byte << 4) & 0xf0);
    	PORTD |= 0x01;
    	PORTD &= 0xfd;
    	_delay_us(1);
    	PORTD |= 0x04;
    	_delay_us(1);
    	PORTD &= 0xfb;
    }
    
    void LCD_init() {
    	_delay_ms(30);
    	Command(0x20);
    	_delay_ms(39);
    	Command(0x20);
    	_delay_ms(1.53);
    	Command(0x20);
    
    	Command(0x28);
    	Command(0x06);
    	Command(0x01);
    	Command(0x0c);
    }